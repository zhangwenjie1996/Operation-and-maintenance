<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="ig.device.domain.mapper.patrol.IPatrolDeviceDetailsMapper" >
  <resultMap id="BaseResultMap" type="ig.device.domain.model.patrol.task.PatrolDeviceDetails" >
     <constructor >
      <idArg column="patrolDeviceDetailsID" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="patrolDeviceID" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="parameterName" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="referenceValue" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="patrolValue" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="priority" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="state" jdbcType="TINYINT" javaType="java.lang.Byte" />
      <arg column="availability" jdbcType="TINYINT" javaType="java.lang.Byte" />
      <arg column="description" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="unitID" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    patrolDeviceDetailsID ID, patrolDeviceID, parameterName, referenceValue, patrolValue, 
    priority, state, availability, description, unitID
  </sql>
   <select id="findById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from patrolDeviceDetails
    where patrolDeviceDetailsID = #{ID,jdbcType=INTEGER}
  </select>
  <delete id="delete" parameterType="java.lang.Integer" >
	delete from patrolDeviceDetails
	where patrolDeviceDetailsID = #{ID,jdbcType=INTEGER}
  </delete>
  
  <update id="remove" parameterType="java.lang.Integer">
	update patrolDeviceDetails
	set availability = 0
	where patrolDeviceDetailsID =
	#{ID,jdbcType=INTEGER}
  </update>
  <insert id="insert" parameterType="ig.device.domain.model.patrol.task.PatrolDeviceDetails" >
      insert into patrolDeviceDetails (patrolDeviceDetailsID, patrolDeviceID, 
      parameterName, referenceValue, patrolValue, 
      priority, state, availability, 
      description, unitID)
    values (#{patrolDeviceDetailsID,jdbcType=INTEGER}, #{patrolDeviceID,jdbcType=INTEGER}, 
      #{parameterName,jdbcType=VARCHAR}, #{referenceValue,jdbcType=DECIMAL}, #{patrolValue,jdbcType=DECIMAL}, 
      #{priority,jdbcType=INTEGER}, #{state,jdbcType=TINYINT}, #{availability,jdbcType=TINYINT}, 
      #{description,jdbcType=VARCHAR}, #{unitID,jdbcType=INTEGER})
  </insert>
   <insert id="add" useGeneratedKeys="true" keyProperty="ID" parameterType="ig.device.domain.model.patrol.task.PatrolDeviceDetails" >
    insert into patrolDeviceDetails
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="ID != null" >
        patrolDeviceDetailsID,
      </if>
      <if test="patrolDeviceID != null" >
        patrolDeviceID,
      </if>
      <if test="parameterName != null" >
        parameterName,
      </if>
      <if test="referenceValue != null" >
        referenceValue,
      </if>
      <if test="patrolValue != null" >
        patrolValue,
      </if>
      <if test="priority != null" >
        priority,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="availability != null" >
        availability,
      </if>
      <if test="description != null" >
        description,
      </if>
       <if test="unitID != null" >
        unitID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="ID != null" >
        #{ID,jdbcType=INTEGER},
      </if>
      <if test="patrolDeviceID != null" >
        #{patrolDeviceID,jdbcType=INTEGER},
      </if>
      <if test="parameterName != null" >
        #{parameterName,jdbcType=VARCHAR},
      </if>
      <if test="referenceValue != null" >
        #{referenceValue,jdbcType=DECIMAL},
      </if>
      <if test="patrolValue != null" >
        #{patrolValue,jdbcType=DECIMAL},
      </if>
      <if test="priority != null" >
        #{priority,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=TINYINT},
      </if>
      <if test="availability != null" >
       1,
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="unitID != null" >
        #{unitID,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="update" parameterType="ig.device.domain.model.patrol.task.PatrolDeviceDetails" >
    update patrolDeviceDetails
    <set >
      <if test="patrolDeviceID != null" >
        patrolDeviceID = #{patrolDeviceID,jdbcType=INTEGER},
      </if>
      <if test="parameterName != null" >
        parameterName = #{parameterName,jdbcType=VARCHAR},
      </if>
      <if test="referenceValue != null" >
        referenceValue = #{referenceValue,jdbcType=DECIMAL},
      </if>
      <if test="patrolValue != null" >
        patrolValue = #{patrolValue,jdbcType=DECIMAL},
      </if>
      <if test="priority != null" >
        priority = #{priority,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="availability != null" >
        availability = #{availability,jdbcType=TINYINT},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
       <if test="unitID != null" >
        unitID = #{unitID,jdbcType=INTEGER},
      </if>
    </set>
    where patrolDeviceDetailsID = #{ID,jdbcType=INTEGER}
  </update>
  <insert id="addAllDeviceDetails" parameterType="List">
    <![CDATA[
    insert into patrolDeviceDetails ( patrolDeviceID, 
      parameterName, referenceValue,  
      priority, state, availability, 
       unitID)
    values
    ]]>
		<foreach collection="list" item="obj" index="index" separator=",">
			(
			#{obj.patrolDeviceID,jdbcType=INTEGER},
			#{obj.parameterName,jdbcType=VARCHAR},
			#{obj.referenceValue,jdbcType=DECIMAL},
			#{obj.priority,jdbcType=INTEGER},
			 #{obj.state,jdbcType=TINYINT},
			1,
			#{obj.unitID,jdbcType=INTEGER})
			
		</foreach>

	</insert>
</mapper>