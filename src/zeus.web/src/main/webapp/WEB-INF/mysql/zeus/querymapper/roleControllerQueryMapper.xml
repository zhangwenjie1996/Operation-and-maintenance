<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="ig.zeus.domain.repository.query.IPermissionQuery" >
  <resultMap id="RoleControllerResultMap" type="ig.zeus.domain.repository.viewmodel.RoleControllerViewModel" >
    <id column="roleID" property="roleid" jdbcType="INTEGER" />
    <id column="controllerID" property="controllerid" jdbcType="INTEGER" />
    <result column="permission" property="permission" jdbcType="TINYINT" />
  </resultMap>
  <delete id="deleteRoleController" parameterType="map" >
    delete from roleController
    where roleID = #{roleid,jdbcType=INTEGER}
      and controllerID = #{controllerid,jdbcType=INTEGER}
  </delete>
  <insert id="saveRoleController" parameterType="ig.zeus.domain.repository.viewmodel.RoleControllerViewModel" >
    insert into roleController (roleID, controllerID, permission
      )
    values (#{roleid,jdbcType=INTEGER}, #{controllerid,jdbcType=INTEGER}, #{permission,jdbcType=TINYINT}
      )
  </insert>
  <update id="updateRoleController" parameterType="ig.zeus.domain.repository.viewmodel.RoleControllerViewModel" >
    update roleController
    set permission = #{permission,jdbcType=TINYINT}
    where roleID = #{roleid,jdbcType=INTEGER}
      and controllerID = #{controllerid,jdbcType=INTEGER}
  </update>
  <select id="findByIdRoleController" resultMap="RoleControllerResultMap" parameterType="map" >
    select roleID, controllerID, permission
    from roleController
    where roleID = #{roleid,jdbcType=INTEGER}
      and controllerID = #{controllerid,jdbcType=INTEGER}
  </select>
  <select id="findAllRoleController" resultMap="RoleControllerResultMap" >
    select roleID, controllerID, permission
    from roleController
  </select>
</mapper>