<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="ig.zeus.domain.repository.command.IPermission" >
  <resultMap id="AccountRoleResultMap" type="ig.zeus.domain.service.command.AccountRoleCommand" >
    <id column="accountID" property="accountid" jdbcType="INTEGER" />
    <id column="roleID" property="roleid" jdbcType="INTEGER" />
  </resultMap>
  <delete id="deleteAccountRole" parameterType="java.lang.Integer" >
    delete from accountRole
    where accountID = #{accountid,jdbcType=INTEGER}
  </delete>
  <insert id="insertAccountRole" parameterType="ig.zeus.domain.service.command.AccountRoleCommand" >
    insert into accountRole (accountID, roleID)
    values (#{accountid,jdbcType=INTEGER}, #{roleid,jdbcType=INTEGER})
  </insert>
  <update id="updateAccountRole" parameterType="ig.zeus.domain.service.command.AccountRoleCommand" >
    update accountRole
    set roleID = #{roleid,jdbcType=INTEGER}
    where accountID = #{accountid,jdbcType=INTEGER}
  </update>
  <select id="findByIdAccountRole" resultMap="AccountRoleResultMap" parameterType="java.lang.Integer" >
    select accountID, roleID
    from accountRole
    where accountID = #{accountid,jdbcType=INTEGER}
  </select>
  <select id="findAllAccountRole" resultMap="AccountRoleResultMap" >
    select accountID, roleID
    from accountRole
  </select>
</mapper>